name: ci

on:
  push:

env:
  EKS_CLUSTER_NAME: ziti-agent-demo 
  AWS_REGION: us-west-2

jobs:
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v4
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: .
  #         file: Dockerfile
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: elblag91/ziti-k8s-agent:${{ github.ref_name }}
  test: 
    # needs: [docker]
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: read
      id-token: write

    steps: 
      - 
        name: Configure AWS credentials from Cloud Engineering Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_FOR_GITHUB }}
          role-session-name: GitHubActions
          audience: sts.amazonaws.com
      -
        name: install-kubectl
        uses: alexellis/arkade-get@master
        with:
          kubectl: latest
      - 
        run: kubectl version
        shell: bash
      -
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2                         
          verbose: false                     
          arch: amd64                        
          bindir: "/usr/local/bin"           
          installrootdir: "/usr/local"  
      -
        run: aws --version
        shell: bash
      # - 
      #   name: update-kube-config
      #   run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
          


    # steps:
    # - uses: actions/checkout@v4

    # - uses: google-github-actions/auth@v2
    #   with:
    #     project_id: 'my-project'
    #     workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
  
